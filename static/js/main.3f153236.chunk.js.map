{"version":3,"sources":["i18n.js","data-table-kelly.js","reportWebVitals.js","index.js"],"names":["i18n","use","Backend","initReactI18next","init","backend","loadPath","fallbackLng","lng","interpolation","escapeValue","DTKelly","emptyStock","id","code","confidence","ratio","win","loss","asset_allocation","roi","asset_money","positive_roi_money","negative_roi_money","langDataItems","label","value","useState","stocks","setStocks","inputMoney","setInputMoney","stockDialog","setStockDialog","deleteStockDialog","setDeleteStockDialog","deleteStocksDialog","setDeleteStocksDialog","stock","setStock","selectedStocks","setSelectedStocks","submitted","setSubmitted","globalFilter","setGlobalFilter","toast","useRef","dt","lang","setSelectedLang","useTranslation","t","formatCurrency","toLocaleString","style","currency","formatPercent","openNew","saveStock","current","show","severity","summary","detail","life","hideDialog","hideDeleteStockDialog","hideDeleteStocksDialog","trim","_stocks","_stock","findIndexById","createId","push","index","i","length","chars","charAt","Math","floor","random","exportCSV","confirmDeleteSelected","kellyFormula","obj","sumDataReduce","arr","reduce","a","b","assetAllocationFormula","aa_this","aa_list","isNaN","roiFormula","aa","c","updateDataObject","data","new_ratio","new_confidence","new_ratio_list","map","asset_allocation_value","updateAllStock","stocks_obj","updated_index","current_ration","current_confidence","onInputNumberChange","e","name","val","header","className","type","onInput","target","placeholder","stockDialogFooter","Fragment","icon","onClick","deleteStockDialogFooter","filter","deleteStocksDialogFooter","includes","ref","left","min","onValueChange","mode","locale","required","classNames","disabled","right","dropdownIcon","options","optionLabel","optionValue","onChange","evt","changeLanguage","selection","showGridlines","onSelectionChange","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","responsiveLayout","selectionMode","headerStyle","width","exportable","body","rowData","editStock","confirmDeleteStock","field","sortable","hidden","color","stockWinClassName","stockLossClassName","minimumFractionDigits","fontWeight","visible","modal","footer","onHide","htmlFor","onInputChange","autoFocus","max","integeronly","fontSize","DTK","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","Container","maxWidth","document","getElementById"],"mappings":"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","file":"static/js/main.3f153236.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport Backend from \"i18next-http-backend\";\r\n\r\ni18n\r\n    // 使用 i18next-http-backend\r\n    .use(Backend)\r\n    // 將 i18next 傳入 react-i18next 裡面\r\n    .use(initReactI18next)\r\n    // 實例化 initReactI18next\r\n    .init({\r\n        backend: {\r\n            //網頁載入時去下載語言檔的位置\r\n            loadPath: \"/i18n/{{lng}}/{{ns}}.json\",\r\n        },\r\n        // 當目前的語言檔找不到對應的字詞時，會用 fallbackLng (en) 作為預設語言\r\n        fallbackLng: \"en\",\r\n        // 預設語言\r\n        lng: \"en\",\r\n        interpolation: {\r\n            // 是否要讓字詞 escaped 來防止 xss 攻擊，這裡因為 React.js 已經做了，就設成 false即可\r\n            escapeValue: false,\r\n        },\r\n    });\r\n\r\nexport default i18n;","import React, {useState, useRef, Suspense} from 'react';\r\nimport {classNames} from 'primereact/utils';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {Toast} from 'primereact/toast';\r\nimport {Button} from 'primereact/button';\r\nimport {Toolbar} from 'primereact/toolbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Dialog} from 'primereact/dialog';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport './asset/css/data_table.css';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst DTKelly = () => {\r\n\r\n    let emptyStock = {\r\n        id: null,\r\n        code: '0000',\r\n        confidence: 0.2,\r\n        ratio: 0,\r\n        win: 1,\r\n        loss: 1,\r\n        asset_allocation: 0,\r\n        roi: 0,\r\n        asset_money: 0,\r\n        positive_roi_money: 0,\r\n        negative_roi_money: 0\r\n    };\r\n\r\n    const confidenceSelectItems = [\r\n        {label: '0%', value: 0},\r\n        {label: '20%', value: 0.2},\r\n        {label: '40%', value: 0.4},\r\n        {label: '60%', value: 0.6},\r\n        {label: '80%', value: 0.8},\r\n        {label: '100%', value: 1}\r\n    ];\r\n\r\n    const langDataItems = [\r\n        {label: 'EN', value: 'en'},\r\n        {label: 'TW', value: 'tw'},\r\n    ];\r\n\r\n    const [stocks, setStocks] = useState([]);\r\n\r\n    const [inputMoney, setInputMoney] = useState(null);\r\n\r\n    const [stockDialog, setStockDialog] = useState(false);\r\n    const [deleteStockDialog, setDeleteStockDialog] = useState(false);\r\n    const [deleteStocksDialog, setDeleteStocksDialog] = useState(false);\r\n    const [stock, setStock] = useState(emptyStock);\r\n    const [selectedStocks, setSelectedStocks] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n\r\n    const [lang, setSelectedLang] = useState('en');\r\n\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const changeLanguage = (lng) => {\r\n        setSelectedLang(lng);\r\n        i18n.changeLanguage(lng);\r\n    };\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const formatPercent = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'percent'});\r\n    }\r\n\r\n    const formatPercentWith2Fixed = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'percent', minimumFractionDigits: 2});\r\n    }\r\n\r\n    const openNew = () => {\r\n        if (!inputMoney) {\r\n            toast.current.show({\r\n                severity: 'warn',\r\n                summary: t(\"warning\"),\r\n                detail: t(\"input_money_required\"),\r\n                life: 3000\r\n            });\r\n        } else {\r\n            setStock(emptyStock);\r\n            // setSubmitted(true);\r\n            saveStock();\r\n\r\n            // setStockDialog(true);\r\n        }\r\n\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setStockDialog(false);\r\n    }\r\n\r\n    const hideDeleteStockDialog = () => {\r\n        setDeleteStockDialog(false);\r\n    }\r\n\r\n    const hideDeleteStocksDialog = () => {\r\n        setDeleteStocksDialog(false);\r\n    }\r\n\r\n    const saveStock = () => {\r\n\r\n        if (!stock.code) {\r\n            toast.current.show({\r\n                severity: 'warn',\r\n                summary: t(\"warning\"),\r\n                detail: t(\"stock_add_warning\"),\r\n                life: 3000\r\n            });\r\n        } else {\r\n\r\n            setSubmitted(true);\r\n\r\n            if (stock.code.trim()) {\r\n                let _stocks = [...stocks];\r\n                let _stock = {...stock};\r\n                if (stock.id) {\r\n                    const index = findIndexById(stock.id);\r\n\r\n                    _stocks[index] = _stock;\r\n                    toast.current.show({\r\n                        severity: 'success',\r\n                        summary: t(\"successful\"),\r\n                        detail: t(\"update_stock_done\"),\r\n                        life: 3000\r\n                    });\r\n                } else {\r\n                    _stock.id = createId();\r\n                    // _stock.image = 'product-placeholder.svg';\r\n                    _stocks.push(_stock);\r\n                    toast.current.show({\r\n                        severity: 'success',\r\n                        summary: t(\"successful\"),\r\n                        detail: t(\"create_stock_done\"),\r\n                        life: 3000\r\n                    });\r\n                }\r\n\r\n                setStocks(_stocks);\r\n                setStockDialog(false);\r\n                setStock(emptyStock);\r\n            }\r\n        }\r\n    }\r\n\r\n    const editStock = (stock) => {\r\n        if (inputMoney) {\r\n            setStock({...stock});\r\n            setStockDialog(true);\r\n        } else {\r\n            toast.current.show({\r\n                severity: 'warn',\r\n                summary: t(\"warning\"),\r\n                detail: t(\"input_money_required\"),\r\n                life: 3000\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const confirmDeleteStock = (stock) => {\r\n        setStock(stock);\r\n        setDeleteStockDialog(true);\r\n    }\r\n\r\n    const deleteStock = () => {\r\n        let _stocks = stocks.filter(val => val.id !== stock.id);\r\n        setStocks(_stocks);\r\n        setDeleteStockDialog(false);\r\n        setStock(emptyStock);\r\n        toast.current.show({severity: 'success', summary: t(\"successful\"), detail: t(\"delete_stock_done\"), life: 3000});\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < stocks.length; i++) {\r\n            if (stocks[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const createId = () => {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    const exportCSV = () => {\r\n        dt.current.exportCSV();\r\n    }\r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteStocksDialog(true);\r\n    }\r\n\r\n    const deleteSelectedStocks = () => {\r\n        let _stocks = stocks.filter(val => !selectedStocks.includes(val));\r\n        setStocks(_stocks);\r\n        setDeleteStocksDialog(false);\r\n        setSelectedStocks(null);\r\n        toast.current.show({severity: 'success', summary: t(\"successful\"), detail: t(\"delete_stocks_done\"), life: 3000});\r\n    }\r\n\r\n    const kellyFormula = (obj) => {\r\n        let ratio = obj.confidence - ((1 - obj.confidence) / ((obj.win / obj.loss)));\r\n\r\n        if (ratio < 0) {\r\n            return 0;\r\n        } else {\r\n            return ratio;\r\n        }\r\n\r\n    }\r\n\r\n    function sumDataReduce(arr) {\r\n        return arr.reduce((a, b) => a + b);\r\n    }\r\n\r\n    const assetAllocationFormula = (aa_this, aa_list) => {\r\n        return isNaN(aa_this / sumDataReduce(aa_list)) ? 0 : aa_this / sumDataReduce(aa_list);\r\n    }\r\n\r\n    const roiFormula = (aa, c) => {\r\n        return aa * (1 + c);\r\n\r\n    }\r\n\r\n    const updateDataObject = (data, index) => {\r\n        let new_ratio = data['ratio'];\r\n        let new_confidence = data['confidence'];\r\n\r\n        let _stocks = [...stocks]; //要如何取到已先更新後的value?????\r\n        // let stocks_length = _stocks.length;\r\n\r\n        //更新該obj的ratio\r\n        _stocks[index]['ratio'] = new_ratio;\r\n        _stocks[index]['confidence'] = new_confidence;\r\n\r\n        let new_ratio_list = _stocks.map(i => i.ratio);\r\n        let asset_allocation_value = assetAllocationFormula(new_ratio, new_ratio_list);\r\n        let roi = roiFormula(asset_allocation_value, new_confidence);\r\n        //ROI(單個)\r\n        data['roi'] = roi;\r\n\r\n        //變動資產配置率(單個)\r\n        data['asset_allocation'] = asset_allocation_value;\r\n        //資產配置金額(單個)\r\n        data['asset_money'] = inputMoney * asset_allocation_value;\r\n\r\n        _stocks[index]['roi'] = roi;\r\n        _stocks[index]['asset_allocation'] = asset_allocation_value;\r\n        _stocks[index]['asset_money'] = inputMoney * asset_allocation_value;\r\n\r\n        // _stocks[index]['positive_roi_money'] = _stocks[index]['win']*inputMoney * asset_allocation_value/100;\r\n        // _stocks[index]['negative_roi_money'] = _stocks[index]['loss']*inputMoney * asset_allocation_value/(-100);\r\n\r\n        // all_stocks = updateAllStock(_stocks, new_ratio_list, index);\r\n        updateAllStock(_stocks, new_ratio_list, index);\r\n\r\n        setStock(data); //通知react渲染單筆UI\r\n        // setStocks(all_stocks); //通知react渲染全部UI\r\n    }\r\n\r\n    const onConfidenceChange = (e) => {\r\n        let _stock = {...stock}; //原始的obj\r\n\r\n        let index = findIndexById(stock.id);\r\n\r\n        let new_confidence = e.value;\r\n        _stock['confidence'] = new_confidence; //新的value\r\n\r\n        //變動建議比例\r\n        let new_ratio = kellyFormula({\r\n            confidence: new_confidence,\r\n            win: _stock['win'],\r\n            loss: _stock['loss']\r\n        });\r\n\r\n        _stock['ratio'] = new_ratio\r\n        setStock(_stock); //通知react渲染UI\r\n\r\n        // _stock = {...stock};\r\n\r\n        updateDataObject(_stock, index);\r\n\r\n    }\r\n\r\n    const updateAllStock = (stocks_obj, new_ratio_list, updated_index) => {\r\n\r\n        for (let i = 0; i < stocks_obj.length; i++) {\r\n\r\n            if (i === updated_index) continue;\r\n            let current_ration = stocks_obj[i].ratio;\r\n            let current_confidence = stocks_obj[i].confidence;\r\n\r\n            let asset_allocation_value = assetAllocationFormula(current_ration, new_ratio_list);\r\n            let roi = roiFormula(asset_allocation_value, current_confidence);\r\n\r\n            stocks_obj[i].asset_allocation_value = asset_allocation_value;\r\n            stocks_obj[i].roi = roi;\r\n            stocks_obj[i]['asset_money'] = inputMoney * asset_allocation_value;\r\n\r\n            // stocks_obj[i]['positive_roi_money'] = stocks_obj[i].win*inputMoney * asset_allocation_value/100;\r\n            // stocks_obj[i]['negative_roi_money'] = stocks_obj[i].loss*inputMoney * asset_allocation_value/(-100);\r\n\r\n        }\r\n\r\n        return stocks_obj;\r\n        // setStocks(stocks_obj); //通知react渲染全部UI\r\n    }\r\n\r\n    const onInputChange = (e, name) => {\r\n        const val = (e.target && e.target.value) || '';\r\n        let _stock = {...stock};\r\n        _stock[`${name}`] = val;\r\n\r\n        setStock(_stock);\r\n    }\r\n\r\n    const onInputNumberChange = (e, name) => {\r\n        const val = e.value || 0;\r\n        let _stock = {...stock};\r\n        let index = findIndexById(stock.id);\r\n\r\n        _stock[`${name}`] = val;\r\n\r\n        _stock['ratio'] = kellyFormula({\r\n            confidence: _stock['confidence'],\r\n            win: _stock['win'],\r\n            loss: _stock['loss']\r\n        });\r\n\r\n        //ration,asset_,roi,input_money\r\n\r\n        setStock(_stock);\r\n\r\n        updateDataObject(_stock, index);\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n\r\n        return (\r\n            <div>\r\n                <React.Fragment>\r\n                    <span className=\"p-input-icon-left\">\r\n                        <InputNumber id=\"inputMoney\" placeholder={t(\"input_money\")} min={0} value={inputMoney}\r\n                                     onValueChange={(e) => setInputMoney(e.value)}\r\n                                     mode=\"currency\" currency=\"USD\"\r\n                                     locale=\"en-US\" required\r\n                                     className={classNames({'p-invalid': !inputMoney}, 'input-money-margin')}/>\r\n                                <br/>\r\n                        {!inputMoney && <small className=\"p-error input-money-margin-span\">{t('input_money_required')}</small>}\r\n                </span>\r\n                </React.Fragment>\r\n                <React.Fragment>\r\n                    <Button label={t('new')} icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew}\r\n                        // badge=\"?\" badgeClassName={classNames('p-badge-info')}  onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}\r\n                    />\r\n                    {/*{isHovering && <HoverText hoverText={setHoverText({t('new_glossary')})}/>}*/}\r\n\r\n                    <Button label={t('delete')} icon=\"pi pi-trash\" className=\"p-button-danger\"\r\n                            onClick={confirmDeleteSelected}\r\n                        // badge=\"?\" badgeClassName={classNames('p-badge-info')} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}\r\n                            disabled={!selectedStocks || !selectedStocks.length}/>\r\n                    {/*{isHovering && <HoverText hoverText={setHoverText({t('delete_glossary')})}/>}*/}\r\n\r\n                </React.Fragment>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <div>\r\n\r\n                <React.Fragment>\r\n                    {/*<FileUpload mode=\"basic\" name=\"demo[]\" auto url=\"https://primefaces.org/primereact/showcase/upload.php\"*/}\r\n                    {/*            accept=\".csv\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\"*/}\r\n                    {/*            onUpload={importCSV}/>*/}\r\n                    <Button label={t('export')} icon=\"pi pi-upload\" className=\"p-button-help p-mr-2\" onClick={exportCSV}\r\n                        // badge=\"?\" badgeClassName={classNames('p-badge-warning')} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}\r\n                    />\r\n                    {/*{isHovering && <HoverText hoverText={setHoverText({t('export_glossary')})}/>}*/}\r\n                </React.Fragment>\r\n                <React.Fragment>\r\n                    <Dropdown className=\"p-mr-2\" dropdownIcon=\"pi pi-globe\" value={lang}\r\n                              options={langDataItems} optionLabel='label'\r\n                              optionValue=\"value\"\r\n                              onChange={(evt) => {\r\n                                  changeLanguage(evt.target.value);\r\n                              }}\r\n                    />\r\n                </React.Fragment>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const assetAllocationBodyTemplate = (rowData) => {\r\n        return formatPercentWith2Fixed(rowData.asset_allocation);\r\n    }\r\n\r\n    const assetMoneyBodyTemplate = (rowData) => {\r\n        return (\r\n            <div style={{fontWeight: 'bold'}}>\r\n                {formatCurrency(rowData.asset_money)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const positiveMoneyBodyTemplate = (rowData) => {\r\n\r\n        const stockWinClassName = classNames({\r\n            'higher20percent': rowData.win > 79\r\n        });\r\n\r\n        let positive_roi_money = rowData.win * rowData.asset_money / (100);\r\n        return (\r\n            <div style={{fontWeight: 'bold'}} className={stockWinClassName}>\r\n                {formatCurrency(positive_roi_money)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const negativeMoneyBodyTemplate = (rowData) => {\r\n        const stockLossClassName = classNames({\r\n            'lower20percent': rowData.loss > 79\r\n        });\r\n\r\n        let negative_roi_money = rowData.loss * rowData.asset_money / (-100);\r\n        return (\r\n            <div style={{fontWeight: 'bold'}} className={stockLossClassName}>\r\n                {formatCurrency(negative_roi_money)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const confidenceBodyTemplate = (rowData) => {\r\n        return formatPercent(rowData.confidence);\r\n    }\r\n\r\n    const winBodyTemplate = (rowData) => {\r\n\r\n        const stockWinClassName = classNames({\r\n            'higher7percent': rowData.win > 6 && rowData.win < 20,\r\n            'higher20percent': rowData.win > 19\r\n        });\r\n\r\n        return (\r\n            <div className={stockWinClassName}>\r\n                {formatPercent(rowData.win / 100)}\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    const lossBodyTemplate = (rowData) => {\r\n        const stockLossClassName = classNames({\r\n            'lower7percent': rowData.loss > 6 && rowData.loss < 20,\r\n            'lower20percent': rowData.loss > 19\r\n        });\r\n\r\n        return (\r\n            <div className={stockLossClassName}>\r\n                {formatPercent(rowData.loss / 100)}\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\"\r\n                        onClick={() => editStock(rowData)}/>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\"\r\n                        onClick={() => confirmDeleteStock(rowData)}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            <h5 className=\"p-mx-0 p-my-1\">{t(\"title\")}</h5>\r\n\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\"/>\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder={t(\"search\")}/>\r\n            </span>\r\n        </div>\r\n    );\r\n    const stockDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label={t('cancel')} icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog}/>\r\n            <Button label={t('save')} icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveStock}/>\r\n        </React.Fragment>\r\n    );\r\n    const deleteStockDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label={t('no')} icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteStockDialog}/>\r\n            <Button label={t('yes')} icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteStock}/>\r\n        </React.Fragment>\r\n    );\r\n    const deleteStocksDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label={t('no')} icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteStocksDialog}/>\r\n            <Button label={t('yes')} icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteSelectedStocks}/>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-crud\">\r\n            <Toast ref={toast}/>\r\n\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\r\n\r\n                <DataTable ref={dt} value={stocks} selection={selectedStocks} showGridlines\r\n                           onSelectionChange={(e) => setSelectedStocks(e.value)}\r\n                           dataKey=\"id\" paginator rows={5} rowsPerPageOptions={[5, 10, 25]}\r\n                           paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                           // currentPageReportTemplate='Showing {first} to {last} of {totalRecords} stocks'\r\n                           currentPageReportTemplate={t('showing') + \" {first} \"+ t(\"to\") + \" {last} \" + t(\"of\") + \" {totalRecords} \" + t('stocks')}\r\n                           globalFilter={globalFilter} header={header} responsiveLayout=\"scroll\">\r\n                    <Column selectionMode=\"multiple\" headerStyle={{width: '3rem'}} exportable={false}></Column>\r\n                    <Column body={actionBodyTemplate} exportable={false} ></Column>\r\n                    <Column field=\"id\" header=\"ID\" sortable hidden></Column>\r\n                    <Column field=\"code\" header={t('stock_code')} sortable></Column>\r\n                    {/*<Column field=\"image\" header=\"Image\" body={imageBodyTemplate}></Column>*/}\r\n\r\n                    <Column field=\"confidence\" header={t('confidence')+\"(%)\"}\r\n                            sortable body={confidenceBodyTemplate}\r\n                    ></Column>\r\n\r\n                    {/*<Column field=\"ratio\" header=\"建議比例(%)\" sortable body={ratioBodyTemplate}*/}\r\n                    {/*></Column>*/}\r\n\r\n                    <Column field=\"win\" headerStyle={{color:'blue'}} header={t('take_profit_point')+\"(%)\"} sortable body={winBodyTemplate}\r\n                    ></Column>\r\n\r\n                    <Column field=\"loss\" headerStyle={{color:'blue'}} header={t('stop_loss_point')+\"(%)\"} sortable body={lossBodyTemplate}\r\n                    ></Column>\r\n\r\n                    <Column field=\"asset_allocation\" header={t('asset_allocation_rate')+\"(%)\"} sortable body={assetAllocationBodyTemplate}\r\n                    ></Column>\r\n\r\n                    {/*<Column field=\"roi\" header={t('roi')+\"(%)\"} sortable body={roiBodyTemplate}*/}\r\n                    {/*        ></Column>*/}\r\n\r\n                    <Column field=\"asset_money\" headerStyle={{color:'red'}} header={t('asset_money')+\"($)\"} sortable body={assetMoneyBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"positive_roi_money\" headerStyle={{color:'red'}} header={t('positive_roi_money')+\"($)\"} sortable body={positiveMoneyBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"negative_roi_money\" headerStyle={{color:'red'}}\r\n                            header={t('negative_roi_money')+\"($)\"} sortable body={negativeMoneyBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                </DataTable>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    <span style={{fontWeight: \"bold\"}}>{t('disclaimer')}</span>:<br/>{t('disclaimer_content')}\r\n                </p>\r\n            </div>\r\n\r\n            <Dialog visible={stockDialog} header=\"Stock Details\" modal className={[\"p-fluid\", \"dialog-width\"]}\r\n                    footer={stockDialogFooter} onHide={hideDialog}>\r\n                {/*{stock.image && <img src={`showcase/demo/images/product/${stock.image}`}*/}\r\n                {/*                       onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}*/}\r\n                {/*                       alt={stock.image} className=\"product-image p-d-block p-m-auto p-pb-3\"/>}*/}\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"code\">{t('stock_code')}</label>\r\n                    <InputText id=\"code\" value={stock.code || ''} onChange={(e) => onInputChange(e, 'code')} required\r\n                               autoFocus className={classNames({'p-invalid': submitted && !stock.code})}/>\r\n                    {!stock.code && <small className=\"p-error\">{t('stock_add_warning')}</small>}\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"confidence\">{t('confidence')+\"(%)\"}</label>\r\n                    <Dropdown value={stock.confidence} options={confidenceSelectItems} optionLabel='label'\r\n                              optionValue=\"value\"\r\n                              onChange={onConfidenceChange}\r\n                        // valueTemplate={confidenceBodyTemplate}\r\n                        // onChange={(e) => setConfidence(e.value)}\r\n                              placeholder={t('select_confidence')}/>\r\n                    {/*{!stock.confidence && <small className=\"p-error\">Confidence is required.</small>}*/}\r\n                </div>\r\n\r\n                <div className=\"p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"win\">{t('take_profit_point')+\"(%)\"}</label>\r\n                        <InputNumber id=\"win\" value={stock.win} min={1} max={100}\r\n                                     onValueChange={(e) => onInputNumberChange(e, 'win')} integeronly/>\r\n                        {!stock.win && <small className=\"p-error\">{t('lock_in_gain_warning')}</small>}\r\n\r\n                    </div>\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"loss\">{t('stop_loss_point')+\"(%)\"}</label>\r\n                        <InputNumber id=\"loss\" value={stock.loss} min={1} max={100}\r\n                                     onValueChange={(e) => onInputNumberChange(e, 'loss')} integeronly/>\r\n                        {!stock.loss && <small className=\"p-error\">{t('stop_loss_point_warning')}</small>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteStockDialog} className=\"dialog-width\" header={t('confirm')} modal\r\n                    footer={deleteStockDialogFooter} onHide={hideDeleteStockDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{fontSize: '2rem'}}/>\r\n                    {stock && <span>{t('delete_single_confirm_description')} <b>{stock.code}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteStocksDialog} className=\"dialog-width\" header={t('confirm')} modal\r\n                    footer={deleteStocksDialogFooter} onHide={hideDeleteStocksDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{fontSize: '2rem'}}/>\r\n                    {stock && <span>{t('delete_all_confirm_description')}</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DTK() {\r\n    return (\r\n        <Suspense fallback=\"loading\">\r\n            <DTKelly/>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default DTK;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './asset/css/index.css';\r\nimport \"./i18n\";\r\nimport DTK from './data-table-kelly';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\nimport Container from '@mui/material/Container';\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline/>\r\n        <Container maxWidth=\"xl\">\r\n            <DTK/>\r\n        </Container>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}